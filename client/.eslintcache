[{"C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\index.js":"1","C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\App.js":"2","C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\pages\\HomePage.js":"3","C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\pages\\LoginSignup.js":"4","C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\pages\\Profile.js":"5","C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\pages\\Marketplace.js":"6","C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\components\\utils\\auth.js":"7","C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\components\\utils\\mutations.js":"8","C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\components\\loginSignup\\Signup.js":"9","C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\components\\loginSignup\\Login.js":"10","C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\components\\navbar\\Navbar.js":"11"},{"size":297,"mtime":1648237144563,"results":"12","hashOfConfig":"13"},{"size":2295,"mtime":1648483597814,"results":"14","hashOfConfig":"13"},{"size":4491,"mtime":1648161869674,"results":"15","hashOfConfig":"13"},{"size":3367,"mtime":1648248834593,"results":"16","hashOfConfig":"13"},{"size":106,"mtime":1648148507583,"results":"17","hashOfConfig":"13"},{"size":126,"mtime":1648483975098,"results":"18","hashOfConfig":"13"},{"size":1060,"mtime":1647315230064,"results":"19","hashOfConfig":"13"},{"size":729,"mtime":1648247812215,"results":"20","hashOfConfig":"13"},{"size":1255,"mtime":1648481260542,"results":"21","hashOfConfig":"13"},{"size":763,"mtime":1648247121634,"results":"22","hashOfConfig":"13"},{"size":1815,"mtime":1648489754444,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1xe6xzi",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\index.js",[],["49","50"],"C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\App.js",[],"C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\pages\\HomePage.js",["51","52"],"import GSWBanner from '../assets/images/GSW.jpg';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst HomePage = () => {\r\n    const [homeGameStats, setHomePlayers] = useState([]);\r\n    const [awayGameStats, setAwayPlayers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let steph = [{\r\n            name: \"Steph Curry\",\r\n            points: 27,\r\n            FGs: 11,\r\n            FGA: 20,\r\n            FG3s: 5,\r\n            FGA3s: 8,\r\n            Rebounds: 7\r\n        }]\r\n\r\n        setHomePlayers(steph);\r\n        console.log(homeGameStats);\r\n    }, [])\r\n    \r\n    return(\r\n        <div>\r\n            <div className=\"jumbotron jumbotron-fluid m-0 p-0\">\r\n                <div className=\"container\">\r\n                    <img className=\"m-auto w-100 p-0 winning-banner\" alt=\"banner\" src={GSWBanner} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row bg-dark pt-2 pb-2\">\r\n                <div className=\"col-8 m-auto\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-6 text-center\">\r\n                            <div className=\"w-75 bg-light rounded m-auto\">\r\n                                <h1><u className=\"home-team-name\">Home</u></h1>\r\n                                <h1 className=\"home-team-score\">105</h1>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-6 text-center\">\r\n                            <div className=\"w-75 bg-light rounded m-auto\">\r\n                                <h1><u className=\"visitor-team-name\">Visitor</u></h1>\r\n                                <h1 className=\"visitor-team-score\">100</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row bg-secondary\">\r\n                <div className=\"col-8 m-auto\">\r\n                    <div className=\"row bg-secondary p-2 rounded\">\r\n                        <div className=\"col-6 text-center m-auto bg-light rounded\">\r\n                            <h1 className=\"winning-team-name\">Golden State Warriors Win!</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <table className=\"table mb-5\" id=\"main-table-home\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                    <th scope=\"col\">Player</th>\r\n                    <th scope=\"col\">Points</th>\r\n                    <th scope=\"col\">FGs</th>\r\n                    <th scope=\"col\">FGA</th>\r\n                    <th scope=\"col\">3FGs</th>\r\n                    <th scope=\"col\">3FGA</th>\r\n                    <th scope=\"col\">Rebounds</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {homeGameStats.length > 0 &&\r\n                        homeGameStats.map((player) => (\r\n                            <tr key={`${player.name}-stats`}>\r\n                                <th>{player.name}</th>\r\n                                <th>{player.points}</th>\r\n                                <th>{player.FGs}</th>\r\n                                <th>{player.FGA}</th>\r\n                                <th>{player.FG3s}</th>\r\n                                <th>{player.FGA3s}</th>\r\n                                <th>{player.Rebounds}</th>\r\n                            </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n                \r\n            <table className=\"table\" id=\"main-table-visitor\">\r\n                <thead className=\"thead-light\">\r\n                <tr>\r\n                    <th scope=\"col\">Player</th>\r\n                    <th scope=\"col\">Points</th>\r\n                    <th scope=\"col\">FGs</th>\r\n                    <th scope=\"col\">FGA</th>\r\n                    <th scope=\"col\">3FGs</th>\r\n                    <th scope=\"col\">3FGA</th>\r\n                    <th scope=\"col\">Rebounds</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {awayGameStats.length > 0 &&\r\n                        awayGameStats.map((player) => (\r\n                            <tr>\r\n                                {player.map((stat) => (\r\n                                    <th>{stat}</th>\r\n                                ))}\r\n                            </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )}\r\n\r\nexport default HomePage;","C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\pages\\LoginSignup.js",["53"],"import { useState, useEffect } from \"react\";\r\nimport classes from './LoginSignup.module.css'\r\n\r\nimport Login from \"../components/loginSignup/Login\"\r\nimport Signup from \"../components/loginSignup/Signup\"\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport Auth from \"../components/utils/auth\"\r\nimport { ADD_USER } from \"../components/utils/mutations\";\r\nimport { LOGIN_USER } from \"../components/utils/mutations\";\r\n\r\nconst LoginSignup = (props) => {\r\n    const [formState, setFormState] = useState({ username: \"\", password: \"\" });\r\n    const [toggleForm, setToggleForm] = useState('Login');\r\n    const [addUser] = useMutation(ADD_USER);\r\n    const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n        try {\r\n          if (\r\n            formState.username &&\r\n            formState.password &&\r\n            formState.email\r\n          ) {\r\n            console.log(\"sign up\")\r\n\r\n            const mutationResponse = await addUser({\r\n              variables: {\r\n                username: formState.username,\r\n                password: formState.password,\r\n                email: formState.email,\r\n              },\r\n            });\r\n\r\n            console.log(mutationResponse);\r\n    \r\n            const token = mutationResponse.data.addUser.token;\r\n            Auth.login(token);\r\n    \r\n          } else {\r\n            console.log(\"log in\")\r\n            const mutationResponse = await login({\r\n              variables: { username: formState.username, password: formState.password },\r\n            });\r\n\r\n            const token = mutationResponse.data.login.token;\r\n            Auth.login(token);\r\n          }\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      };\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        // console.log(formState);\r\n        setFormState({\r\n          ...formState,\r\n          [name]: value,\r\n        });\r\n      };\r\n\r\n    useEffect(() =>{\r\n\r\n    }, [toggleForm])\r\n\r\n    return(\r\n        <div className={classes.background}>\r\n            <div className={classes.barrier}></div>\r\n            <div className={classes.formCard}>\r\n                <h1 className={classes.title}>Basketball Simulator</h1>\r\n\r\n                <div className={classes.buttonDiv}>\r\n                        <button className={classes.loginBtn} onClick={() => setToggleForm(\"Login\")}>Login</button>\r\n                        <button className={classes.signupBtn} onClick={() => setToggleForm(\"Signup\")}>Sign up</button>\r\n                </div>\r\n\r\n                <form  onSubmit={submitHandler}>\r\n                    {toggleForm === \"Login\"\r\n                    ? (\r\n                        <Login\r\n                        setUsernameInput={handleChange}\r\n                        setPasswordInput={handleChange}\r\n                        />\r\n                    ) : (\r\n                        <Signup\r\n                        setUsernameInput={handleChange}\r\n                        setEmailInput={handleChange}\r\n                        setPasswordInput={handleChange}\r\n                        setPasswordConfirmInput={handleChange}\r\n                        />  \r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default LoginSignup;","C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\pages\\Profile.js",[],"C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\pages\\Marketplace.js",[],"C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\components\\utils\\auth.js",[],"C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\components\\utils\\mutations.js",[],"C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\components\\loginSignup\\Signup.js",[],"C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\components\\loginSignup\\Login.js",[],"C:\\Users\\OEM\\Desktop\\Bootcamp\\basketball-simulation\\client\\src\\components\\navbar\\Navbar.js",["54","55","56","57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":6,"column":27,"nodeType":"65","messageId":"66","endLine":6,"endColumn":41},{"ruleId":"67","severity":1,"message":"68","line":21,"column":8,"nodeType":"69","endLine":21,"endColumn":10,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":16,"column":21,"nodeType":"65","messageId":"66","endLine":16,"endColumn":26},{"ruleId":"63","severity":1,"message":"72","line":8,"column":8,"nodeType":"65","messageId":"66","endLine":8,"endColumn":11},{"ruleId":"73","severity":1,"message":"74","line":18,"column":21,"nodeType":"75","endLine":18,"endColumn":75},{"ruleId":"73","severity":1,"message":"74","line":23,"column":21,"nodeType":"75","endLine":23,"endColumn":70},{"ruleId":"73","severity":1,"message":"74","line":28,"column":25,"nodeType":"75","endLine":28,"endColumn":80},{"ruleId":"76","severity":1,"message":"77","line":49,"column":1,"nodeType":"78","messageId":"79","endLine":49,"endColumn":159},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'setAwayPlayers' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'homeGameStats'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'error' is assigned a value but never used.","'Gif' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [homeGameStats]",{"range":"85","text":"86"},[555,557],"[homeGameStats]"]